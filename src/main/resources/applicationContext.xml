<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描 -->
	<context:annotation-config/>
	<context:component-scan base-package="com.vst.defend" />
	
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:db.properties" />
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- 驱动 -->
		<property name="driverClassName" value="${api.driver}" />
		<!-- 数据库连接 -->
		<property name="url" value="${api.url}" />
		<!-- 用户名 -->
		<property name="username" value="${api.username}" />
		<!-- 密码 -->
		<property name="password" value="${api.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${api.initialSize}"/>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${api.maxActive}"/>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${api.maxIdle}"/>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${api.minIdle}"/>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${api.maxWait}"/>
		
		<property name="validationQuery" value="SELECT 1" />			<!-- 用来检测连接是否有效的sql，必须是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用 -->
        <property name="testOnBorrow" value="true" />					<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
        <property name="testOnReturn" value="false" />					<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
        <property name="testWhileIdle" value="true" />					<!-- 申请连接的时候，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。建议配置为true，不影响性能，并且保证安全性 -->
		
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒（Destroy线程检测连接的间隔时间） -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒（Destory线程中如果检测到当前连接的最后活跃时间和当前时间的差值大于minEvictableIdleTimeMillis，则关闭当前连接） -->
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations">
			<array>
				<value>classpath:mapper/**/*.xml</value>
			</array>
		</property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.vst.defend.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 引入上传文件信息配置文件 -->
	<bean class="com.vst.defend.communal.util.PropertiesReader" init-method="initial">
		<property name="resource" value="classpath:config.properties"></property>
	</bean>
</beans>
